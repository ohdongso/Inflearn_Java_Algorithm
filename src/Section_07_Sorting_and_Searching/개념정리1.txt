-선택정렬:숫자로 이루어진 배열에서 가장 작은 값을 좌측에 차례로 위치시키는 알고리즘이다.
1, 숫자로 이루어진 배열을 받는다.
2, i는 0~n-1까지 비교한다.
3, j는 i+1부터 n까지 비교한다.
4, i에 해당하는 값보다 더 작은 값이 있다면, i에 j에 해당하는 값을 넣어주고 계속 반복한다.
5, 결과적으로 index i에 순차적으로 작은 값들이 오름차순 정렬 되는 알고리즘이다.

-버블정렬:숫자로 이루어진 배열에서 이웃한 두수를 비교해 가장 큰 값을 우측에 차례로 위치시키는 알고리즘이다.
1, 숫자 5개를 받으면 4번째 숫자까지 돈다.
2, (0,1),(1,2),(2,3),(3,4) ==> 마지막 index3과, index4를 비교 ==> i=0
3, (0,1),(1,2),(2,3) ==> 마지막 index2와, index3을 비교 ==> i=1
4, (0,1),(1,2) ==> 마지막 index1과, index2를 비교 ==> i=2
5, (0,1), ==> 마지막 index0과, index1을 비교 ==> i=3
6, i가 3이되면, j는 0으로 한번만 반복문이 수행된다.(5번수행)
==> (비교할index, 비교할index)

-삽입정렬:숫자로 이루어진 배열에서 i를 기준으로 좌측으로 오름차순 정렬해주는 알고리즘이다. i는 1씩 증가한다.

-이분검색:일단 오름차순 또는 내림차순으로 정렬 돼 있어야 한다. 
그 다음 처음과 끝 index를 더하기 한다음 2로 나눠서 중앙값을 구한다.
(int/int)는 소수점이 날라간다. 그다음 m값이 mid값과 같은지 비교한다. 
만약 같지 않으면 다시 중앙값을 구해서 비교하고 범위를 좁혀나가면서 m값을 찾아나가는 알고리즘이다.
여기서 중요한 것은 mid값이 m보다 크면 rt값에 mid-1을 넣고
mid값이 m보다 작으면 lt값에 mid+1을 해준다.

-결정알고리즘:lt와 rt사이에 문제의 정답이 확실히 있을 때 사용하는 알고리즘으로 범위를 이분검색으로 범위를 줄여가며
범위에 해당하는 더 좋은 "최적의 값"을 찾아가는 알고리즘이다.

-재귀함수:자기자신을 호출하는 함수
-스택프레임:재귀함수 사용시 생성되는 스택 행의 단위를 의미하고 (매개변수, 지역변수, 복귀주소) 등이 포함된다.
-이진수:10진수를 2로 나누어 질때까지 반복하여, 나머지를 마지막부터 순차적으로 적어주면 2진수를 구할수 있다.







