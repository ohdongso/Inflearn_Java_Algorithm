-next(): 문자형을 입력받는다.
-next()와nextLine()의 차이점: next는 개행문자를 무시하고 입력을 받고, nextLine은 한줄 단위로 입력을 받기 때문에 개행문자를 포함한다.
-charAt(index): 문자열에서 index에 해당하는 문자형을 추출한다.
-문자열.toUpperCase: 문자열을 대문자로 변경 할 수 있다.
-Character.toUpperCase(문자형): 문자형을대문자로 변경할수 있다.
-문자열.toCharArray(): 문자열을 문자형으로 하나씩 잘라서 반환한다.
-nextLine(): 문자열을 입력받는다.
-Integer.MIN_VALUE: int형의 가장 작은 값으로 초기화
-문자열.split(" "): split안의 구분자를 기준으로 문자열을 자른다.
-문자열substring(): substring(0,5)을 하면 index번호로 0~5를 가리키고 실제로 0~4를 잘라낸다, 마지막 값 -1이라고 생각하면 된다.
 substring 인수값(n)이 하나만 들어갈 경우 index (0 ~ n-1) 여기까지 잘라낸다.
-StringBuilder(str).reverse(): 입력받은 문자열을 뒤집는다.
-StringBuilder(str).toString(): StringBuilder객체를 String객체로 변환한다.
-StringBuilder(str).reverse().toString(): str문자열을 뒤집고 String객체로 변환한다.
-String.valueOf(s): char[]배열을 String형으로 변환 시켜주는 함수.
-Character.isAlphabetic(): char형 값이 알파벳이면 true를 반환한다.
-indexOf("찾을 특정 문자", "시작할 위치"): 특정 문자나 문자열이 앞에서부터 처음 발견되는 인덱스를 반환하며 만약 찾지 못했을 경우 -1을 반환
-str.equals(tmp): str과 tmp의 문자열을 비교한다.
-str.equalsIgnoreCase(tmp): str과 tmp의 문자열을 비교하는데 대소문자를 무시하고 비교해준다. 유용하다.
-replace(변환하고자 하는대상, 변환할 문자 값): 대상문자열을 원하는 원자 값으로 변환하는 함수
-replaceAll(변환하고자 하는대상, 변환할 문자 값): replace와의 차이점은 정규표현식 사용이 가능하다.
 ex) replaceAll("[^A-Z]", "") ==>문자열에서 대문자 알파벳 A~Z까지 문자열을 공백("")으로 변환한다.
- 
 
 
 